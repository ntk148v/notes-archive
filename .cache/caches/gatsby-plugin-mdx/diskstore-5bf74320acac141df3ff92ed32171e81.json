{"expireTime":9007200904488647000,"key":"gatsby-plugin-mdx-entire-payload-9d198a842b3e4cffeb43052abef97f76-/notes","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Hide tab","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":12,"offset":12},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":12,"offset":12},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"NOTE","position":{"start":{"line":4,"column":5,"offset":18},"end":{"line":4,"column":9,"offset":22},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":16},"end":{"line":4,"column":11,"offset":24},"indent":[]}},{"type":"text","value":": It works for me with gnome-terminal 3.36.2","position":{"start":{"line":4,"column":11,"offset":24},"end":{"line":4,"column":55,"offset":68},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":16},"end":{"line":4,"column":55,"offset":68},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":14},"end":{"line":4,"column":55,"offset":68},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Check allowed values:","position":{"start":{"line":6,"column":3,"offset":72},"end":{"line":6,"column":24,"offset":93},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":72},"end":{"line":6,"column":24,"offset":93},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":70},"end":{"line":6,"column":24,"offset":93},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":70},"end":{"line":6,"column":24,"offset":93},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"$ gsettings range org.gnome.Terminal.Legacy.Settings tab-policy\nenum\n'always'\n'automatic'","position":{"start":{"line":8,"column":1,"offset":95},"end":{"line":13,"column":4,"offset":196},"indent":[1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can enable 'never' value by changing ","position":{"start":{"line":15,"column":3,"offset":200},"end":{"line":15,"column":44,"offset":241},"indent":[]}},{"type":"inlineCode","value":"/usr/share/glib-2.0/schemas/org.gnome.Terminal.gschema.xml","position":{"start":{"line":15,"column":44,"offset":241},"end":{"line":15,"column":104,"offset":301},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":15,"column":104,"offset":301},"end":{"line":15,"column":105,"offset":302},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":200},"end":{"line":15,"column":105,"offset":302},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":198},"end":{"line":15,"column":105,"offset":302},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":198},"end":{"line":15,"column":105,"offset":302},"indent":[]}},{"type":"code","lang":"diff","meta":null,"value":"--- /usr/share/glib-2.0/schemas/org.gnome.Terminal.gschema.xml  2018-12-25 13:45:29.000000000 -0800\n+++ /tmp/org.gnome.Terminal.gschema.xml 2019-12-06 13:22:19.318272624 -0800\n@@ -38,7 +38,7 @@\n    <enum id='org.gnome.Terminal.TabsbarPolicy'>\n     <value nick='always' value='0'/>\n     <value nick='automatic' value='1'/>\n-    <!-- <value nick='never' value='2'/> -->\n+    <value nick='never' value='2'/>\n   </enum>\n\n    <enum id='org.gnome.Terminal.ThemeVariant'>\n@@ -727,7 +727,7 @@\n     </key>\n\n     <key name=\"tab-policy\" enum=\"org.gnome.Terminal.TabsbarPolicy\">\n-      <default>'automatic'</default>\n+      <default>'never'</default>\n       <summary>When to show the tabs bar</summary>\n     </key>","position":{"start":{"line":17,"column":1,"offset":304},"end":{"line":37,"column":4,"offset":1018},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"bash","meta":null,"value":"# Reload, you need sudo permission\ncd /usr/share/glib-2.0/schemas\nglib-compile-schemas .","position":{"start":{"line":39,"column":1,"offset":1020},"end":{"line":43,"column":4,"offset":1120},"indent":[1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"After the change you should see 'never' as a possible value:","position":{"start":{"line":45,"column":3,"offset":1124},"end":{"line":45,"column":63,"offset":1184},"indent":[]}}],"position":{"start":{"line":45,"column":3,"offset":1124},"end":{"line":45,"column":63,"offset":1184},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1122},"end":{"line":45,"column":63,"offset":1184},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1122},"end":{"line":45,"column":63,"offset":1184},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"\n```$ gsettings range org.gnome.Terminal.Legacy.Settings tab-policy\nenum\n'always'\n'automatic'\n'never'\n\n- After restarting your gnome-terminal tabs can be turned off with:\n\n```bash\n$ gsettings set org.gnome.Terminal.Legacy.Settings tab-policy 'never'","position":{"start":{"line":47,"column":1,"offset":1186},"end":{"line":59,"column":4,"offset":1447},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Turn on with:","position":{"start":{"line":61,"column":3,"offset":1451},"end":{"line":61,"column":16,"offset":1464},"indent":[]}}],"position":{"start":{"line":61,"column":3,"offset":1451},"end":{"line":61,"column":16,"offset":1464},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1449},"end":{"line":61,"column":16,"offset":1464},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1449},"end":{"line":61,"column":16,"offset":1464},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"$ gsettings set org.gnome.Terminal.Legacy.Settings tab-policy 'always'","position":{"start":{"line":63,"column":1,"offset":1466},"end":{"line":65,"column":4,"offset":1548},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Create gnome-terminal application file","position":{"start":{"line":67,"column":4,"offset":1553},"end":{"line":67,"column":42,"offset":1591},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1550},"end":{"line":67,"column":42,"offset":1591},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"gnome-terminal","position":{"start":{"line":69,"column":1,"offset":1593},"end":{"line":69,"column":17,"offset":1609},"indent":[]}},{"type":"text","value":" is a command, you can create a desktop file for it, create file ","position":{"start":{"line":69,"column":17,"offset":1609},"end":{"line":69,"column":82,"offset":1674},"indent":[]}},{"type":"inlineCode","value":"/usr/local/share/applications/terminal.desktop","position":{"start":{"line":69,"column":82,"offset":1674},"end":{"line":69,"column":130,"offset":1722},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":69,"column":130,"offset":1722},"end":{"line":69,"column":131,"offset":1723},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1593},"end":{"line":69,"column":131,"offset":1723},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[Desktop Entry]\nVersion=1.0\nType=Application\nName=Terminal\nGenericName=Terminal emulator\nComment=Gnome terminal\nTryExec=gnome-terminal\nExec=gnome-terminal\nCategories=System;TerminalEmulator;","position":{"start":{"line":71,"column":1,"offset":1725},"end":{"line":81,"column":4,"offset":1923},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Gnome terminal tricks\"}","position":{"start":{"line":84,"column":1,"offset":1926},"end":{"line":84,"column":62,"offset":1987},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":84,"column":62,"offset":1987}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Gnome terminal tricks\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Hide tab\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NOTE\"), \": It works for me with gnome-terminal 3.36.2\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check allowed values:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ gsettings range org.gnome.Terminal.Legacy.Settings tab-policy\\nenum\\n'always'\\n'automatic'\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can enable 'never' value by changing \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/usr/share/glib-2.0/schemas/org.gnome.Terminal.gschema.xml\"), \":\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\"\n  }, \"--- /usr/share/glib-2.0/schemas/org.gnome.Terminal.gschema.xml  2018-12-25 13:45:29.000000000 -0800\\n+++ /tmp/org.gnome.Terminal.gschema.xml 2019-12-06 13:22:19.318272624 -0800\\n@@ -38,7 +38,7 @@\\n    <enum id='org.gnome.Terminal.TabsbarPolicy'>\\n     <value nick='always' value='0'/>\\n     <value nick='automatic' value='1'/>\\n-    <!-- <value nick='never' value='2'/> -->\\n+    <value nick='never' value='2'/>\\n   </enum>\\n\\n    <enum id='org.gnome.Terminal.ThemeVariant'>\\n@@ -727,7 +727,7 @@\\n     </key>\\n\\n     <key name=\\\"tab-policy\\\" enum=\\\"org.gnome.Terminal.TabsbarPolicy\\\">\\n-      <default>'automatic'</default>\\n+      <default>'never'</default>\\n       <summary>When to show the tabs bar</summary>\\n     </key>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# Reload, you need sudo permission\\ncd /usr/share/glib-2.0/schemas\\nglib-compile-schemas .\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After the change you should see 'never' as a possible value:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"\\n```$ gsettings range org.gnome.Terminal.Legacy.Settings tab-policy\\nenum\\n'always'\\n'automatic'\\n'never'\\n\\n- After restarting your gnome-terminal tabs can be turned off with:\\n\\n```bash\\n$ gsettings set org.gnome.Terminal.Legacy.Settings tab-policy 'never'\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Turn on with:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ gsettings set org.gnome.Terminal.Legacy.Settings tab-policy 'always'\\n\")), mdx(\"h2\", null, \"Create gnome-terminal application file\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gnome-terminal\"), \" is a command, you can create a desktop file for it, create file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/usr/local/share/applications/terminal.desktop\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[Desktop Entry]\\nVersion=1.0\\nType=Application\\nName=Terminal\\nGenericName=Terminal emulator\\nComment=Gnome terminal\\nTryExec=gnome-terminal\\nExec=gnome-terminal\\nCategories=System;TerminalEmulator;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Gnome terminal tricks\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Hide tab`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE`}</strong>{`: It works for me with gnome-terminal 3.36.2`}</p>\n    </blockquote>\n    <ul>\n      <li parentName=\"ul\">{`Check allowed values:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ gsettings range org.gnome.Terminal.Legacy.Settings tab-policy\nenum\n'always'\n'automatic'\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`You can enable 'never' value by changing `}<inlineCode parentName=\"li\">{`/usr/share/glib-2.0/schemas/org.gnome.Terminal.gschema.xml`}</inlineCode>{`:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`--- /usr/share/glib-2.0/schemas/org.gnome.Terminal.gschema.xml  2018-12-25 13:45:29.000000000 -0800\n+++ /tmp/org.gnome.Terminal.gschema.xml 2019-12-06 13:22:19.318272624 -0800\n@@ -38,7 +38,7 @@\n    <enum id='org.gnome.Terminal.TabsbarPolicy'>\n     <value nick='always' value='0'/>\n     <value nick='automatic' value='1'/>\n-    <!-- <value nick='never' value='2'/> -->\n+    <value nick='never' value='2'/>\n   </enum>\n\n    <enum id='org.gnome.Terminal.ThemeVariant'>\n@@ -727,7 +727,7 @@\n     </key>\n\n     <key name=\"tab-policy\" enum=\"org.gnome.Terminal.TabsbarPolicy\">\n-      <default>'automatic'</default>\n+      <default>'never'</default>\n       <summary>When to show the tabs bar</summary>\n     </key>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# Reload, you need sudo permission\ncd /usr/share/glib-2.0/schemas\nglib-compile-schemas .\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`After the change you should see 'never' as a possible value:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`\n\\`\\`\\`$ gsettings range org.gnome.Terminal.Legacy.Settings tab-policy\nenum\n'always'\n'automatic'\n'never'\n\n- After restarting your gnome-terminal tabs can be turned off with:\n\n\\`\\`\\`bash\n$ gsettings set org.gnome.Terminal.Legacy.Settings tab-policy 'never'\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Turn on with:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ gsettings set org.gnome.Terminal.Legacy.Settings tab-policy 'always'\n`}</code></pre>\n    <h2>{`Create gnome-terminal application file`}</h2>\n    <p><inlineCode parentName=\"p\">{`gnome-terminal`}</inlineCode>{` is a command, you can create a desktop file for it, create file `}<inlineCode parentName=\"p\">{`/usr/local/share/applications/terminal.desktop`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`[Desktop Entry]\nVersion=1.0\nType=Application\nName=Terminal\nGenericName=Terminal emulator\nComment=Gnome terminal\nTryExec=gnome-terminal\nExec=gnome-terminal\nCategories=System;TerminalEmulator;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}