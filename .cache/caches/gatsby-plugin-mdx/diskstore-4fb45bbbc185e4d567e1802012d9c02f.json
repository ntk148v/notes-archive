{"expireTime":9007200904488648000,"key":"gatsby-plugin-mdx-entire-payload-3a0b870f017a1bdd58a2a26377308a76-/notes","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Check out the ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":15,"offset":15},"indent":[]}},{"type":"link","title":null,"url":"http://vimdoc.sourceforge.net/htmldoc/usr_21.html#21.4","children":[{"type":"text","value":"document","position":{"start":{"line":2,"column":16,"offset":16},"end":{"line":2,"column":24,"offset":24},"indent":[]}}],"position":{"start":{"line":2,"column":15,"offset":15},"end":{"line":2,"column":81,"offset":81},"indent":[]}},{"type":"text","value":", here is the scenario to explain how it works and how its use case.","position":{"start":{"line":2,"column":81,"offset":81},"end":{"line":2,"column":149,"offset":149},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":149,"offset":149},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You are editing a dozen of files, complex window layout,... but this is the end of the day, you need to quit work.","position":{"start":{"line":4,"column":3,"offset":153},"end":{"line":4,"column":117,"offset":267},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":153},"end":{"line":4,"column":117,"offset":267},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":151},"end":{"line":4,"column":117,"offset":267},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You will have to open all these files again next day.","position":{"start":{"line":5,"column":3,"offset":270},"end":{"line":5,"column":56,"offset":323},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":270},"end":{"line":5,"column":56,"offset":323},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":268},"end":{"line":5,"column":56,"offset":323},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Hah, don't worry, Vim already provides a very cool feature for you - ","position":{"start":{"line":6,"column":3,"offset":326},"end":{"line":6,"column":72,"offset":395},"indent":[]}},{"type":"inlineCode","value":"sessions","position":{"start":{"line":6,"column":72,"offset":395},"end":{"line":6,"column":82,"offset":405},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":6,"column":82,"offset":405},"end":{"line":6,"column":83,"offset":406},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":326},"end":{"line":6,"column":83,"offset":406},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":324},"end":{"line":6,"column":83,"offset":406},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create one.","position":{"start":{"line":7,"column":3,"offset":409},"end":{"line":7,"column":14,"offset":420},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":409},"end":{"line":7,"column":14,"offset":420},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":407},"end":{"line":7,"column":14,"offset":420},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":151},"end":{"line":7,"column":14,"offset":420},"indent":[1,1,1]}},{"type":"code","lang":"vim","meta":null,"value":":mks ~/.vim/sessions/foo.vim","position":{"start":{"line":9,"column":1,"offset":422},"end":{"line":11,"column":4,"offset":461},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Easily pick up where you left off, everything will be exactly as you left it: the working directory, your windows, splits and buffers...","position":{"start":{"line":13,"column":3,"offset":465},"end":{"line":13,"column":139,"offset":601},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":465},"end":{"line":13,"column":139,"offset":601},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":463},"end":{"line":13,"column":139,"offset":601},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":463},"end":{"line":13,"column":139,"offset":601},"indent":[]}},{"type":"code","lang":"vim","meta":null,"value":":source ~/.vim/sessions/foo.vim","position":{"start":{"line":15,"column":1,"offset":603},"end":{"line":17,"column":4,"offset":645},"indent":[1,1]}},{"type":"code","lang":"bash","meta":null,"value":"vim -S ~/.vim/sessions/foo.vim","position":{"start":{"line":19,"column":1,"offset":647},"end":{"line":21,"column":4,"offset":689},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Vim sessions\"}","position":{"start":{"line":24,"column":1,"offset":692},"end":{"line":24,"column":53,"offset":744},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":24,"column":53,"offset":744}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Vim sessions\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Check out the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://vimdoc.sourceforge.net/htmldoc/usr_21.html#21.4\"\n  }, \"document\"), \", here is the scenario to explain how it works and how its use case.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You are editing a dozen of files, complex window layout,... but this is the end of the day, you need to quit work.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You will have to open all these files again next day.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hah, don't worry, Vim already provides a very cool feature for you - \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sessions\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create one.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-vim\"\n  }, \":mks ~/.vim/sessions/foo.vim\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Easily pick up where you left off, everything will be exactly as you left it: the working directory, your windows, splits and buffers...\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-vim\"\n  }, \":source ~/.vim/sessions/foo.vim\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"vim -S ~/.vim/sessions/foo.vim\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Vim sessions\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Check out the `}<a parentName=\"p\" {...{\n        \"href\": \"http://vimdoc.sourceforge.net/htmldoc/usr_21.html#21.4\"\n      }}>{`document`}</a>{`, here is the scenario to explain how it works and how its use case.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`You are editing a dozen of files, complex window layout,... but this is the end of the day, you need to quit work.`}</li>\n      <li parentName=\"ul\">{`You will have to open all these files again next day.`}</li>\n      <li parentName=\"ul\">{`Hah, don't worry, Vim already provides a very cool feature for you - `}<inlineCode parentName=\"li\">{`sessions`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Create one.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-vim\"\n      }}>{`:mks ~/.vim/sessions/foo.vim\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Easily pick up where you left off, everything will be exactly as you left it: the working directory, your windows, splits and buffers...`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-vim\"\n      }}>{`:source ~/.vim/sessions/foo.vim\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vim -S ~/.vim/sessions/foo.vim\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}