{"data":{"brainNote":{"slug":"linux-cpu-utilization","title":"Linux CPU Utilization","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Linux CPU Utilization\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Task\"), mdx(\"p\", null, \"Display the current CPU utilization, as a percentage, calculated from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/proc/stat\"), \".\"), mdx(\"h2\", null, \"Solution\"), mdx(\"p\", null, \"Most Linux kernels provide a virtual \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.kernel.org/doc/Documentation/filesystems/proc.txt\"\n  }, \"/proc\"), \" filesystem, providing an interface to various internal data structures.\"), mdx(\"p\", null, \"One of these internal structures (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/proc/stat\"), \") includes information on the amount of time (in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"USER_HZ\"), \") spent in various states. To determine the current level of CPU utilization from this information:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"read the 1st line of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/proc/stat\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"discard the first word of that first line (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cpu\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"sum all of the times found on that first line to get the total time\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"divide the 4th column (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"idle\"), \") by the total time, to get the fraction of time spent being idle\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"subtract the previous fraction from 1.0 to get the time spent being not idle\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"multiple by 100 to get a percentage\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"To get a more real-time utilization, simple repeat the steps above with some small sleep interval in between.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# cat /proc/stat\\ncpu  14786866 5251 3483876 75457666 367491 0 1796945 0 0 0\\ncpu0 4877246 1597 844536 17736624 88425 0 598115 0 0 0\\ncpu1 3054061 1076 890314 19490622 88362 0 566587 0 0 0\\ncpu2 3273462 1090 872208 19277044 99891 0 402594 0 0 0\\ncpu3 3582096 1488 876816 18953375 90812 0 229647 0 0 0\\n# ...\\n\")), mdx(\"h2\", null, \"Source code\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ntk148v/testing/tree/master/python/cpu_util.py\"\n  }, \"Python\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ntk148v/testing/tree/master/golang/cpu-util/main.go\"\n  }, \"Golang\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"About these notes","slug":"about","childMdx":{"excerpt":"Hi, I'm  Kien Nguyen-Tuan  ðŸ‘‹. set.md.bak linux-recommended-software prometheus-alertmanager-silence bash-color-log escape-characters curlâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"@kiennt's notes"}}},"pageContext":{"slug":"linux-cpu-utilization"}}