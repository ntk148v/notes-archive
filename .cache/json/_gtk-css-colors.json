{"data":{"brainNote":{"slug":"gtk-css-colors","title":"How to import variables to gtk css file from another css file + Pywal template","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to import variables to gtk css file from another css file + Pywal template\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"GTK CSS doesn't support CSS variables. (CSS variables are relatively new.) GTK CSS has its own syntax for defining color variables, which predates the CSS variable syntax: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.gnome.org/gtk3/stable/chap-css-overview.html#id-1.5.2.3.8\"\n  }, \"@define-color\"), \". Therefore, here is the trick to use generated colors in GTK css.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create pywal template \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/.config/wal/templates/colors-gtk.css\"), \":\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"@define-color background {background};\\n@define-color foreground {foreground};\\n@define-color color0     {color0};\\n@define-color color1     {color1};\\n@define-color color2     {color2};\\n@define-color color3     {color3};\\n@define-color color4     {color4};\\n@define-color color5     {color5};\\n@define-color color6     {color6};\\n@define-color color7     {color7};\\n@define-color color8     {color8};\\n@define-color color9     {color9};\\n@define-color color10    {color10};\\n@define-color color11    {color11};\\n@define-color color12    {color12};\\n@define-color color13    {color13};\\n@define-color color14    {color14};\\n@define-color color15    {color15};\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After using \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dylanaraps/pywal\"\n  }, \"pywal\"), \" to generate theme, we will got this file \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.cache/wal/colors-gtk.css\"), \" (for example, the actual colors may be different, depend on your colorscheme):\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"@define-color background #1a1b26;\\n@define-color foreground #c0caf5;\\n@define-color color0     #15161E;\\n@define-color color1     #f7768e;\\n@define-color color2     #9ece6a;\\n@define-color color3     #e0af68;\\n@define-color color4     #7aa2f7;\\n@define-color color5     #bb9af7;\\n@define-color color6     #7dcfff;\\n@define-color color7     #a9b1d6;\\n@define-color color8     #414868;\\n@define-color color9     #f7768e;\\n@define-color color10    #9ece6a;\\n@define-color color11    #e0af68;\\n@define-color color12    #7aa2f7;\\n@define-color color13    #bb9af7;\\n@define-color color14    #7dcfff;\\n@define-color color15    #c0caf5;\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create gtk.css file \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.config/gtk3.0/gtk.css\"), \":\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"@import url('file:///home/<username>/.cache/wal/colors-gtk.css');\\n\\nvte-terminal {\\n    padding: 30px;\\n    background: @background;\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"About these notes","slug":"about","childMdx":{"excerpt":"Hi, I'm  Kien Nguyen-Tuan  ðŸ‘‹. set.md.bak linux-recommended-software prometheus-alertmanager-silence bash-color-log escape-characters curlâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"@kiennt's notes"}}},"pageContext":{"slug":"gtk-css-colors"}}