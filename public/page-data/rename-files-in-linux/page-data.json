{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/rename-files-in-linux","result":{"data":{"brainNote":{"slug":"rename-files-in-linux","title":"Rename files in Linux","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Rename files in Linux\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rename a single file with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mv\"), \". Just a basic thing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rename multiple files with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mv\"), \".\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# Rename files with suffix .yaml to yml\\nfor f in *.yaml; do mv -- \\\"$f\\\" \\\"${f%.yaml}.yml\\\"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rename multiple files with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rename\"), \".\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# Install rename command\\n# Ubuntu/Debian-derived distros\\nsudo apt install rename\\n# RedHat-derived distros\\nsudo yum install prename\\n# The follow examples are performed in Ubuntu/Debian-derived distros\\nrename 's/.yaml/.yml/' *.yaml\\n# Replace all occurrences of \\\"prev_\\\" with \\\"next_\\\"\\nrename 's/prev_/next_' *.c\\n# Delete part of a filename\\nrename 's/next_//' *.c\\n# Limit changes to specific parts of filenames\\n# Only change the files that start with \\\"paramater\\\"\\nrename 's/^param/parameter/' *.c\\n# Search with grouping\\n# Replace all occurrences of \\\"string\\\" and \\\"strong\\\"\\nrename 's/(str|stro)ng/strength' *.c\\n# Use translations with rename\\n# Force filenames to uppercase\\nrename 'y/a-z/A-Z' *.py\\n# More?\\nman rename\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"About these notes","slug":"about","childMdx":{"excerpt":"Hi, I'm  Kien Nguyen-Tuan  ðŸ‘‹. set.md.bak linux-recommended-software prometheus-alertmanager-silence bash-color-log escape-characters curlâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"@kiennt's notes"}}},"pageContext":{"slug":"rename-files-in-linux"}},"staticQueryHashes":[]}